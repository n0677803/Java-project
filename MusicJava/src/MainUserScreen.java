
import java.util.StringTokenizer;
import javax.swing.DefaultListModel;
import javax.swing.JList;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Matthew
 */
public class MainUserScreen extends javax.swing.JFrame {

    /**
     * Creates new form MainUserScreen
     */
    
    public MainUserScreen() { //construction
        initComponents();
        String tempUsername;
        String[] tempUserData;
        
        tempUsername = "JOSHUA112";
        tempUserData = Populate_Array();
        
        //pass the array of info into this and populate the screen
        //Username, Password, PlaceOfBirth,DateOfBirth,FaveGenres,freinds,sentRequests,receivedRequests
        Populate_Screen(tempUserData);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lst_friends_display = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txt_info = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txt_shared_songs = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        txt_friend_posts = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        txt_post = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        lst_friendslist = new javax.swing.JList<>();
        jScrollPane6 = new javax.swing.JScrollPane();
        lst_friend_requests = new javax.swing.JList<>();
        jLabel6 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setViewportView(lst_friends_display);

        jLabel1.setText("Friends");

        txt_info.setColumns(20);
        txt_info.setRows(5);
        jScrollPane2.setViewportView(txt_info);

        jLabel2.setText("Information");

        jScrollPane3.setViewportView(txt_shared_songs);

        jLabel3.setText("Shared Songs");

        jButton1.setText("Play");

        txt_friend_posts.setColumns(20);
        txt_friend_posts.setRows(5);
        jScrollPane4.setViewportView(txt_friend_posts);

        jLabel4.setText("Friends Posts");

        jLabel5.setText("Post:");

        jButton2.setText("Send");
        jButton2.setToolTipText("");

        jScrollPane5.setViewportView(lst_friendslist);

        jScrollPane6.setViewportView(lst_friend_requests);

        jLabel6.setText("Connected People");

        jButton3.setText("Request Friendship");

        jButton4.setText("Chat");

        jButton5.setText("Accept");

        jButton6.setText("Refuse");
        jButton6.setToolTipText("");

        jLabel7.setText("Friend Requests");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addComponent(jLabel1))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(48, 48, 48)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(84, 84, 84)
                                .addComponent(jLabel2)
                                .addGap(174, 174, 174)
                                .addComponent(jLabel3)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(txt_post)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)
                        .addGap(46, 46, 46))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton3)
                            .addComponent(jButton4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton5)
                            .addComponent(jButton6))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel6)
                                    .addGap(241, 241, 241)
                                    .addComponent(jLabel7))
                                .addComponent(jLabel4)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 508, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1)
                        .addComponent(jScrollPane2))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_post, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton4))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton6)))
                .addContainerGap())
        );

        txt_post.getAccessibleContext().setAccessibleName("post_text_box");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainUserScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainUserScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainUserScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainUserScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
           //new MainUserScreen().setVisible(true);
            }
        });
        
        
    }
    
    private void Populate_Screen(String[] input_user_Data)
    {
        String delim = "/n";
        //INFO BOX STUFF
        String username = input_user_Data[0];
        String PlaceOfBirth = input_user_Data[2];
        String DateOfBirth = input_user_Data[3];
        //Split the fave genre into seperate elements
        String Fave_genre = "";
        StringTokenizer genreTokens = new StringTokenizer(input_user_Data[4], "/"); //Create tokens out of the retrieved line
        
        for (int i = 0; i < genreTokens.countTokens(); i++ )
        {
            Fave_genre += genreTokens.nextToken().trim(); //Add the string onto it
            Fave_genre += "-|-"; //Delimiter
        }
        
//                String tempName = myTokens.nextToken().trim();
//                if (input_username.equals(tempName)) //If the name being searched for equals the token (stored username)
//                {
//                    for (int j = 0; j < retrieved_record.length; j++) //Populate the array
//                        {
//                            retrieved_record[j] = myTokens.nextToken().trim(); //Get all the tokens out
//                        }
//                    break; //break out of the loop sin
      
        String tempInfoString = username + delim + PlaceOfBirth + delim + DateOfBirth + delim + Fave_genre;
      
        txt_info.setText(tempInfoString); //Set text
        
        //LISTBOX VIDEO https://www.youtube.com/watch?v=oA_kcVaJQ3E
        //FRIENDS BOX STUFF
        String FriendsString = input_user_Data[5];
        if (FriendsString.equals("noFriends"))
        {
            //lst_friends_display
            DefaultListModel tempModel = new DefaultListModel();
            tempModel.addElement("You have no friends");
            lst_friends_display.setModel(tempModel);
        }
        else
        {
            //SET THE DELIMITER HERE TO WHAT IT'S ACTUALLY STORED AS
            String FriendDelimiter = "-|-"; //Unique looking delimiter so usernames have low chance to contain them
            DefaultListModel tempModel = new DefaultListModel();
            
            StringTokenizer friendTokens = new StringTokenizer(FriendsString, FriendDelimiter); //Create tokens out of the retrieved line
        
            for (int i = 0; i < friendTokens.countTokens(); i++ )
            {
                tempModel.addElement(friendTokens.nextToken().trim()); //Add the string onto it

            }
            //Set all the values onto the actual listbox
            lst_friends_display.setModel(tempModel);
            
        }
        //SENT FRIEND REQUEST STUFF
        String SentFriendRequest = input_user_Data[6];
        if (SentFriendRequest.equals("noSentRequests"))
        {
            DefaultListModel tempModel = new DefaultListModel();
            tempModel.addElement("You have no sent friend requests");
            lst_friends_display.setModel(tempModel);
        }
        else
        {
            //SET THE DELIMITER HERE TO WHAT IT'S ACTUALLY STORED AS
            String FriendDelimiter = "-|-"; //Unique looking delimiter so usernames have low chance to contain them
            DefaultListModel tempModel = new DefaultListModel();
            
            StringTokenizer friendRequestTokens = new StringTokenizer(SentFriendRequest, FriendDelimiter); //Create tokens out of the retrieved line
        
            for (int i = 0; i < friendRequestTokens.countTokens(); i++ )
            {
                tempModel.addElement(friendRequestTokens.nextToken().trim()); //Add the string onto it

            }
            //Set all the values onto the actual listbox
            lst_friend_requests.setModel(tempModel);
            
        }
        //RECIEVED FRIEND REQUEST STUFF
        if (input_user_Data[7].equals("noRecievedRequests"))
        {   //lst_friend_requests
            DefaultListModel tempModel = new DefaultListModel();
            tempModel.addElement("You have no recieved friend requests");
            lst_friend_requests.setModel(tempModel);
        }
        else
        {
            String FriendDelimiter = "-|-"; //Unique looking delimiter so usernames have low chance to contain them
            DefaultListModel tempModel = new DefaultListModel();
            
            StringTokenizer friendTokens = new StringTokenizer(input_user_Data[5], FriendDelimiter); //Create tokens out of the retrieved line
        
            for (int i = 0; i < friendTokens.countTokens(); i++ )
            {
                tempModel.addElement(friendTokens.nextToken().trim()); //Add the string onto it

            }
            //Set all the values onto the actual listbox
            lst_friends_display.setModel(tempModel);
            
        }
        
    }
    
    private String[] Populate_Array()
    {
        String[] userdata = new String[11];
        userdata[0] = "JOSHUA112";
        userdata[2] = "NOTTINGHAM";
        userdata[3] = "21/October/4212";
        userdata[4] = "Rap/Drum and Bass/";
        userdata[5] = "noFriends";
        userdata[6] = "noSentRequests";
        userdata[7] = "noRecievedRequests";
        
        return userdata;
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JList<String> lst_friend_requests;
    private javax.swing.JList<String> lst_friends_display;
    private javax.swing.JList<String> lst_friendslist;
    private javax.swing.JTextArea txt_friend_posts;
    private javax.swing.JTextArea txt_info;
    private javax.swing.JTextField txt_post;
    private javax.swing.JList<String> txt_shared_songs;
    // End of variables declaration//GEN-END:variables
}
