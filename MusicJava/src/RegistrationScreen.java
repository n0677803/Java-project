import java.util.ArrayList;
import java.util.List;
import java.net.*;
import java.io.*;
import javax.swing.JOptionPane;

public class RegistrationScreen extends javax.swing.JFrame {
    static List<String> Fave_List = new ArrayList<String>(); //List storing faves
    static int Fave_Limit = 3; //How many faves they can have
    
    public RegistrationScreen() {
        initComponents();        
        txt_FaveArea.setRows(Fave_Limit);        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbl_Username = new javax.swing.JLabel();
        Lbl_PlaceOfBirth = new javax.swing.JLabel();
        Lbl_DateOfBirth = new javax.swing.JLabel();
        txt_Username = new javax.swing.JTextField();
        txt_PlaceOfBirth = new javax.swing.JTextField();
        txt_DateOfBirth = new javax.swing.JTextField();
        cmb_FaveGenres = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JSeparator();
        btn_Add = new javax.swing.JButton();
        btn_Remove = new javax.swing.JButton();
        btn_Register = new javax.swing.JButton();
        btn_Login = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt_FaveArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(600, 400));
        setResizable(false);
        setSize(new java.awt.Dimension(600, 400));

        lbl_Username.setText("Username:");

        Lbl_PlaceOfBirth.setText("Place of Birth:");

        Lbl_DateOfBirth.setText("Date of Birth:");

        cmb_FaveGenres.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Rock and Roll", "Techno", "Classical", "Drum and Bass", "Rap", "Opera" }));

        btn_Add.setText("ADD");
        btn_Add.setMaximumSize(new java.awt.Dimension(80, 23));
        btn_Add.setMinimumSize(new java.awt.Dimension(80, 23));
        btn_Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_AddActionPerformed(evt);
            }
        });

        btn_Remove.setText("REMOVE");
        btn_Remove.setMaximumSize(new java.awt.Dimension(80, 23));
        btn_Remove.setMinimumSize(new java.awt.Dimension(80, 23));
        btn_Remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_RemoveActionPerformed(evt);
            }
        });

        btn_Register.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btn_Register.setText("REGISTER");
        btn_Register.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_RegisterActionPerformed(evt);
            }
        });

        btn_Login.setText("Login");

        txt_FaveArea.setEditable(false);
        txt_FaveArea.setColumns(20);
        txt_FaveArea.setRows(5);
        txt_FaveArea.setAutoscrolls(false);
        jScrollPane1.setViewportView(txt_FaveArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Lbl_PlaceOfBirth)
                            .addComponent(lbl_Username)
                            .addComponent(Lbl_DateOfBirth))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_Username, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_PlaceOfBirth, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_DateOfBirth, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 353, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(btn_Register, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 286, Short.MAX_VALUE)
                        .addComponent(btn_Login)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cmb_FaveGenres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btn_Add, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btn_Remove, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_Username)
                    .addComponent(txt_Username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Lbl_PlaceOfBirth)
                    .addComponent(txt_PlaceOfBirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Lbl_DateOfBirth)
                    .addComponent(txt_DateOfBirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_Add, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmb_FaveGenres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(btn_Remove, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_Register, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                    .addComponent(btn_Login))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
   
    //Add button, add stuff from the combo box to the list
    private void btn_AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_AddActionPerformed
        // Add the fave music genre to the list    
        Add_String(cmb_FaveGenres.getSelectedItem().toString());       
    }//GEN-LAST:event_btn_AddActionPerformed
    //Function to add strings to the list
    private void Add_String(String input_string){        
        if (!Fave_List.contains(input_string) && Check_Limit()){ //Make sure the thing being added isn't already in the box
            Fave_List.add(input_string); //Add the data
            update_fave_box(); //Update the box with the new array data
        }
    }
  //Remove button, remove stuff from the list
    private void btn_RemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_RemoveActionPerformed

        Remove_String(cmb_FaveGenres.getSelectedItem().toString());
    }//GEN-LAST:event_btn_RemoveActionPerformed

    private void btn_RegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_RegisterActionPerformed
        if(txt_Username.getText().isEmpty() || txt_PlaceOfBirth.getText().isEmpty() || txt_DateOfBirth.getText().isEmpty()){
         // error
         JOptionPane.showMessageDialog(null, "Registration failed, please fill out all inputs!");
        } else { //every thing is fine, you can continue.
        
        String[] userdata = new String[3];
        userdata[0] = txt_Username.getText() + " ";
        userdata[1] = txt_PlaceOfBirth.getText() + " ";
        userdata[2] = txt_DateOfBirth.getText() + " ";
        
       //String POB = ;
       // String DOB = ();        
        try{
        Socket server = new Socket("localhost", 9090);
        JOptionPane.showMessageDialog(null, "Attempting To Register!");
        ObjectOutputStream outToServer = new ObjectOutputStream(server.getOutputStream());
        outToServer.writeObject(userdata);
        } catch (IOException e) {
            //handle error here
        }
        txt_Username.setText(null);
        txt_PlaceOfBirth.setText(null);
        txt_DateOfBirth.setText(null);
        }
    }//GEN-LAST:event_btn_RegisterActionPerformed
  //--------------------------------------------------------------------------
   //Function to remove strings from the list
    private void Remove_String(String input_string){
        if (Fave_List.contains(input_string)){
            Fave_List.remove(input_string);
            update_fave_box(); //Update the box with the new array data
        }
    }
    
    private void update_fave_box(){
        String myString = "";       
        for (int i = 0; i < Fave_List.size(); i++)
        {
            myString += Fave_List.get(i);
            myString += "\n"; //Next line
        }     
        txt_FaveArea.setText(myString);    
    }
    
    private boolean Check_Limit(){            
        if (Fave_List.size() < Fave_Limit )
            return true;
        else
            return false;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistrationScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistrationScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistrationScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistrationScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegistrationScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Lbl_DateOfBirth;
    private javax.swing.JLabel Lbl_PlaceOfBirth;
    private javax.swing.JButton btn_Add;
    private javax.swing.JButton btn_Login;
    private javax.swing.JButton btn_Register;
    private javax.swing.JButton btn_Remove;
    private javax.swing.JComboBox<String> cmb_FaveGenres;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lbl_Username;
    private javax.swing.JTextField txt_DateOfBirth;
    private javax.swing.JTextArea txt_FaveArea;
    private javax.swing.JTextField txt_PlaceOfBirth;
    private javax.swing.JTextField txt_Username;
    // End of variables declaration//GEN-END:variables
}
